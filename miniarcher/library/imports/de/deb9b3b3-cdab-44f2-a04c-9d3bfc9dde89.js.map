{"version":3,"sources":["../../../../../assets/script/view/assets/script/view/Boom.js"],"names":["Utils","require","cc","Class","extends","Component","properties","boomPiecesArr","default","type","Node","start","boom","time","Math","random","node","runAction","sequence","delayTime","fadeOut","i","length","heartPiece","angle","getS2TAngle","x","y","offset","cos","getRad","sin","spawn","moveTo","v2","easing","easeCircleActionOut","scaleTo","moveBy","easeCubicActionIn","rotateBy"],"mappings":"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","file":"Boom.js","sourceRoot":"../../../../../assets/script/view","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\nvar Utils = require(\"../Utils/Utils\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n        boomPiecesArr:{\n            default:[],\n            type:[cc.Node],\n        },\n        type:{\n            default:0,\n        }\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start () {\n        this.boom();\n    },\n    \n    boom () {\n        if(this.type == 0){\n            let time = .2 + Math.random() *.1;\n            this.node.runAction(cc.sequence(\n                cc.delayTime(time * .7),\n                cc.fadeOut(time * .3)\n            ));\n            for (var i = 0; i < this.boomPiecesArr.length; i++) {\n                var heartPiece = this.boomPiecesArr[i];\n\n                let angle = Utils.getS2TAngle(0,heartPiece.x, 0, heartPiece.y, 1);\n                angle += (Math.random() - 0.5) * Math.random() * 20;\n                let offset = Math.random() * 50 + 80;\n                let x = heartPiece.x - Math.cos(Utils.getRad(angle)) * offset;\n                let y = heartPiece.y + Math.sin(Utils.getRad(angle)) * offset;\n                heartPiece.runAction(\n                    cc.spawn(\n                        cc.moveTo(time,cc.v2(x, y)).easing(cc.easeCircleActionOut()),\n                        cc.scaleTo(time, .1)\n                    )\n                )\n            }\n        }\n        else{\n            let time = .3 + Math.random() *.2;\n            this.node.runAction(cc.sequence(\n                cc.delayTime(time * .5),\n                cc.fadeOut(time * .5)\n            ));\n            for (var i = 0; i < this.boomPiecesArr.length; i++) {\n                var heartPiece = this.boomPiecesArr[i];\n\n                let angle = Utils.getS2TAngle(0,heartPiece.x, 0, heartPiece.y, 1);\n                angle += (Math.random() - 0.5) * Math.random() * 20;\n                let offset = Math.random() * 10 + 40;\n                let x = heartPiece.x - Math.cos(Utils.getRad(angle)) * offset;\n                let y = heartPiece.y + Math.sin(Utils.getRad(angle)) * offset;\n\n                heartPiece.runAction(\n                    cc.spawn(\n                        cc.moveTo(time,cc.v2(x, y)).easing(cc.easeCircleActionOut()),\n                        cc.moveBy(time,cc.v2(0, -200)).easing(cc.easeCubicActionIn()),\n                        cc.rotateBy(time,(Math.random() - 0.5) * 2 * (Math.random() * 100 + 100)).easing(cc.easeCircleActionOut()),\n                    )\n                )\n            }\n        }\n    },\n});\n"]}