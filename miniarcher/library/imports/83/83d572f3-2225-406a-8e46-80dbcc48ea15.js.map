{"version":3,"sources":["../../../../../assets/script/game/assets/script/game/SoundManager.js"],"names":["playerInfo","require","cc","Class","extends","Component","properties","isSoundOpen","default","visible","audioSource","type","AudioSource","bgm1","AudioClip","bgm2","btn","clock","hit1","hit2","shoot","walk1","walk2","ballon","glass","clockId","start","playBg","clip","loop","play","playSound","name","audioEngine","playEffect","playClock","fn","id","bind","schedule","stopClock","stopEffect","unscheduleAllCallbacks","setSoundOpen","open","sys","localStorage","setItem","stop"],"mappings":"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","file":"SoundManager.js","sourceRoot":"../../../../../assets/script/game","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\nvar playerInfo = require(\"../game/PlayerInfo\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n        isSoundOpen:{\n            default:true,\n            visible:false,\n        },\n        audioSource: {\n            type: cc.AudioSource,\n            default: null\n        },\n        bgm1: {\n            type: cc.AudioClip,\n            default: null\n        },\n        bgm2: {\n            type: cc.AudioClip,\n            default: null\n        },\n        btn: {\n            type: cc.AudioClip,\n            default: null\n        },\n        clock: {\n            type: cc.AudioClip,\n            default: null\n        },\n        hit1: {\n            type: cc.AudioClip,\n            default: null\n        },\n        hit2: {\n            type: cc.AudioClip,\n            default: null\n        },\n        shoot: {\n            type: cc.AudioClip,\n            default: null\n        },\n        walk1: {\n            type: cc.AudioClip,\n            default: null\n        },\n        walk2: {\n            type: cc.AudioClip,\n            default: null\n        },\n        ballon: {\n            type: cc.AudioClip,\n            default: null\n        },\n        glass: {\n            type: cc.AudioClip,\n            default: null\n        },\n        clockId: {\n            default:-1,\n            visible:false,\n        }\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start () {\n    },\n    \n    playBg(type = 1){\n        this.audioSource.clip = this[\"bgm\"+type]\n        this.audioSource.loop = true;\n        if(this.isSoundOpen){\n            this.audioSource.play();\n        }\n    },\n\n    playSound(name){\n        if(this.isSoundOpen){\n            cc.audioEngine.playEffect(this[name], false);\n        }\n    },\n    \n    playClock(){\n        if(this.isSoundOpen){\n            let fn = function(){\n                let id = cc.audioEngine.playEffect(this.clock, false);\n                this.clockId = id;\n            }.bind(this);\n            fn();\n            this.schedule(fn, 4.056);\n        }\n    },\n\n    stopClock(){\n        if(this.clockId != -1) cc.audioEngine.stopEffect(this.clockId);\n        this.unscheduleAllCallbacks();\n    },\n    \n    setSoundOpen(open){\n        this.isSoundOpen = open;\n        playerInfo.isSoundOpen = open;\n        cc.sys.localStorage.setItem(\"playerinfo_issoundopen\",open?\"true\":\"false\");\n        if(open){\n            this.playBg();\n        }\n        else{\n            this.audioSource.stop();\n        }\n    }\n});\n"]}