{"version":3,"sources":["../../../../../assets/script/utils/assets/script/utils/Utils.js"],"names":["utils","getRad","deg","Math","PI","getDeg","rad","getS2TAngle","x","x1","y","y1","direction","angle","atan","S2TAngle","getDistance","pow","module","exports"],"mappings":";;;;;;AAAA,IAAMA,QAAQ,EAAd;;AAEAA,MAAMC,MAAN,GAAe,UAAUC,GAAV,EAAc;AACzB,WAAOA,MAAM,GAAN,GAAYC,KAAKC,EAAjB,GAAsB,CAA7B;AACH,CAFD;;AAIAJ,MAAMK,MAAN,GAAe,UAAUC,GAAV,EAAc;AACzB,WAAOA,OAAO,IAAIH,KAAKC,EAAhB,IAAsB,GAA7B;AACH,CAFD;;AAKAJ,MAAMO,WAAN,GAAoB,UAAUC,CAAV,EAAaC,EAAb,EAAiBC,CAAjB,EAAoBC,EAApB,EAAwBC,SAAxB,EACpB;AACI,QAAIC,QAAS,MAAOV,KAAKW,IAAL,CAAU,CAACJ,IAAIC,EAAL,KAAYH,IAAIC,EAAhB,CAAV,CAAP,IAA0C,IAAIN,KAAKC,EAAnD,CAAb;AACA,QAAIW,WAAW,CAAf;;AAEA,QAAIP,IAAIC,EAAJ,IAAUC,IAAIC,EAAlB,EACII,WAAWF,KAAX,CADJ,KAEK,IAAIL,IAAGC,EAAH,IAAS,EAAEC,KAAKC,EAAP,CAAb,EACDI,WAAW,MAAMF,KAAjB,CADC,KAEA,IAAIL,IAAIC,EAAJ,IAAUC,IAAIC,EAAlB,EACDI,WAAW,MAAMF,KAAjB,CADC,KAEA,IAAIL,IAAIC,EAAJ,IAAUC,KAAKC,EAAnB,EACDI,WAAW,CAAX,CADC,KAEA,IAAIP,KAAKC,EAAL,IAAWC,IAAIC,EAAnB,EACDI,WAAW,EAAX,CADC,KAEA,IAAIP,IAAIC,EAAJ,IAAUC,KAAKC,EAAnB,EACDI,WAAW,GAAX,CADC,KAEA,IAAIP,KAAKC,EAAL,IAAWC,IAAIC,EAAnB,EACDI,WAAW,GAAX,CADC,KAEA,IAAIP,KAAKC,EAAL,IAAWC,KAAKC,EAApB,EACDI,WAAW,CAAX;;AAEJ,QAAIH,YAAY,CAAhB,EACI,OAAO,MAAMG,QAAb;;AAEJ,WAAO,CAACA,QAAR;AACH,CA1BD;;AA4BAf,MAAMgB,WAAN,GAAoB,UAAUR,CAAV,EAAaC,EAAb,EAAiBC,CAAjB,EAAoBC,EAApB,EAAuB;AACvC,WAAOR,KAAKc,GAAL,CAAS,CAACT,IAAIC,EAAL,KAAYD,IAAIC,EAAhB,IAAsB,CAACC,IAAIC,EAAL,KAAYD,IAAIC,EAAhB,CAA/B,EAAoD,EAApD,CAAP;AACH,CAFD;AAGAO,OAAOC,OAAP,GAAiBnB,KAAjB","file":"Utils.js","sourceRoot":"../../../../../assets/script/utils","sourcesContent":["const utils = {};\n\nutils.getRad = function (deg){\n    return deg / 360 * Math.PI * 2;\n}\n\nutils.getDeg = function (rad){\n    return rad / (2 * Math.PI) * 360;\n}\n\n\nutils.getS2TAngle = function (x, x1, y, y1, direction)\n{\n    var angle\t\t= 360 * (Math.atan((y - y1) / (x - x1))) / (2 * Math.PI);\n    var S2TAngle\t= 0;\n\n    if (x > x1 && y > y1)\n        S2TAngle = angle;\n    else if (x <x1 && !(y == y1))\n        S2TAngle = 180 + angle;\n    else if (x > x1 && y < y1)\n        S2TAngle = 360 + angle;\n    else if (x > x1 && y == y1)\n        S2TAngle = 0;\n    else if (x == x1 && y > y1)\n        S2TAngle = 90;\n    else if (x < x1 && y == y1)\n        S2TAngle = 180;\n    else if (x == x1 && y < y1)\n        S2TAngle = 270;\n    else if (x == x1 && y == y1)\n        S2TAngle = 0;\n\n    if (direction > 0)\n        return 360 - S2TAngle;\n\n    return -S2TAngle;\n}\n\nutils.getDistance = function (x, x1, y, y1){\n    return Math.pow((x - x1) * (x - x1) + (y - y1) * (y - y1), .5);\n}\nmodule.exports = utils;"]}