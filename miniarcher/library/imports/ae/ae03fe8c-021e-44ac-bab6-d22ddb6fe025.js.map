{"version":3,"sources":["../../../../../assets/script/view/assets/script/view/Arrow.js"],"names":["Utils","require","playerInfo","cc","Class","extends","Component","properties","moving","default","visible","speed","gravity","time","startPos","v2","anchor","type","Node","anchor1","hitX","hitXs","onLoad","start","update","dt","phyUpdate","lastPos","node","position","x","Math","cos","getRad","angle","y","sin","getS2TAngle","rotation","anchorPos","convertToWorldSpaceAR","gameInstance","gameView","player","shootEnable","parent","arrowNum","gameOver","canvas","height","content","roadContents","curIndex","convertToNodeSpaceAR","anchorX","ground","infos","getCurLevelInfo","targetsInfo","getCurTargetsInfo","length","polyType","i","targets","polyTargets","target","active","targetNode","head","targetPos","anchorPos1","no","instantiate","offsetX","offsetY","tan","push","penetratable","rock","soundManager","playSound","hit","explode","mustShoot","score","offset","abs","index","curHitNum","getCurMustShoot","move","skinType","addScore","playPart","showBoomFire","unschedule","shoot","schedule","runAction","sequence","rotateBy","easing","easeSineOut","easeSineInOut","easeSineIn","callFunc","bind","spawn","rotateTo","easeBounceOut","moveBy","clearSelf"],"mappings":"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","file":"Arrow.js","sourceRoot":"../../../../../assets/script/view","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\nvar Utils = require(\"../Utils/Utils\");\nvar playerInfo = require(\"../game/PlayerInfo\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n        moving:{\n            default:false,\n            visible:false,\n        },\n        speed:{\n            default:0,\n            visible:false,\n        },\n        gravity:{\n            default:-10,\n            visible:false,\n        },\n        time:{\n            default:0,\n            visible:false,\n        },\n        startPos:{\n            default:cc.v2(0,0),\n            visible:false,\n        },\n        anchor:{\n            default:null,\n            type:cc.Node,\n        },\n        anchor1:{\n            default:null,\n            type:cc.Node,\n        },\n        hitX:{\n            default:null,\n            type:cc.Node,\n        },\n        hitXs:{\n            default:[],\n            type:[cc.Node],\n        }\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        this.gravity = -50;\n    },\n\n    start () {\n    },\n\n    update (dt) {\n        \n    },\n\n    phyUpdate(){\n        if(this.moving){\n            this.time += 0.01;\n            let lastPos = this.node.position;\n            this.node.position = cc.v2(\n                this.startPos.x + this.speed * 60 * this.time * Math.cos(Utils.getRad(this.angle)),\n                this.startPos.y + this.speed * 60 * this.time * Math.sin(Utils.getRad(this.angle)) + 0.5 * this.gravity * this.time  * this.time * 100\n            );\n            \n            let angle = Utils.getS2TAngle(this.node.position.x, lastPos.x, this.node.position.y, lastPos.y, 1);\n            this.node.rotation = angle;\n            \n            let anchorPos = this.anchor.convertToWorldSpaceAR(cc.v2(0,0));\n            \n            if(this.node.position.x > 400){\n                gameInstance.gameView.player.shootEnable = true;\n            }\n\n            if(this.node.position.x > 500){\n                this.moving = false;\n                this.node.parent = null;\n                if(gameInstance.gameView.arrowNum == 0) gameInstance.gameView.gameOver();\n            }\n            else if(anchorPos.y - gameInstance.canvas.node.height / 2 < - 250){\n                this.moving = false;\n                let content = gameInstance.gameView.roadContents[gameInstance.gameView.curIndex];\n                this.node.parent = content;\n                this.node.position = content.convertToNodeSpaceAR(anchorPos);\n                this.node.anchorX = 1;\n                this.ground();\n                gameInstance.gameView.player.shootEnable = true;\n                if(gameInstance.gameView.arrowNum == 0) gameInstance.gameView.gameOver();\n            }\n\n            let infos = gameInstance.gameView.getCurLevelInfo();\n            let targetsInfo = gameInstance.gameView.getCurTargetsInfo();\n            let length = infos.polyType != 0 ? 10 : 3;\n            for(let i = 0; i < targetsInfo.length; ++i){\n                let targets = infos.polyType != 0 ? gameInstance.gameView.polyTargets : gameInstance.gameView.targets;\n                let target =  targets[gameInstance.gameView.curIndex * length + i];\n                if(!target.node.active) continue;\n\n                let targetNode = infos.polyType != 0 ? target.node : target.head;\n                let targetPos = targetNode.convertToWorldSpaceAR(cc.v2(0,0));\n                let anchorPos1 = this.anchor1.convertToWorldSpaceAR(cc.v2(0,0));\n                \n                let height = targetNode.height;\n                if(\n                    anchorPos.x > targetPos.x - 40 &&\n                    anchorPos1.x < targetPos.x - 40 &&\n                    anchorPos.y > targetPos.y - height / 2 && \n                    anchorPos.y < targetPos.y + height / 2\n                    ){\n                                                            \n                    let no = cc.instantiate(this.hitX);\n                    no.parent = targetNode;\n                    no.position = targetNode.convertToNodeSpaceAR(anchorPos);\n                    let offsetX = -3 - no.x;\n                    let offsetY = offsetX * Math.tan(Utils.getRad(360 - this.node.rotation));\n                    no.position = cc.v2(-3, no.y + offsetY);\n                    no.active = true;\n                    this.hitXs.push(no);\n                    if(target.penetratable == \"false\"){\n                        this.moving = false;\n                        this.node.parent = targetNode;\n                        this.node.position = no.position;\n                        this.node.anchorX = 1;\n                        this.rock();\n                        if(infos.polyType == 0)target.rock();\n                        gameInstance.soundManager.playSound(\"hit2\");\n                    }\n                    else if(!target.hit){\n                        target.explode();\n                    }\n                    \n                    if(!target.hit){\n                        if(target.mustShoot == \"true\"){\n                            let score = 10;\n                            let offset = Math.abs(no.y);\n                            let index = 2;\n                            if(offset < height / 7 * 0.5){\n                                score = 30;\n                                index = 0;\n                                gameInstance.soundManager.playSound(\"hit1\");\n                            }\n                            else if(offset < height / 7 * 1.5){\n                                score = 20;\n                                index = 1;\n                            }\n                            else if(offset < height / 7 * 2.5)\n                                score = 10;\n                            \n                            target.hit = true;\n                            gameInstance.gameView.curHitNum++;\n                            if(target.penetratable == \"true\" && gameInstance.gameView.curHitNum == gameInstance.gameView.getCurMustShoot()){\n                                gameInstance.gameView.move();\n                            }\n                            if(target.skinType != 2)gameInstance.gameView.addScore(score, target);\n                            target.playPart(index);\n                            if(index == 0)\n                                gameInstance.gameView.showBoomFire();\n                        }\n                        target.hit = true;\n                    }\n                }\n            }\n        }\n        else{\n            this.unschedule(this.phyUpdate, this);\n        }\n    },\n\n    shoot(angle, speed){\n        this.angle = angle;\n        this.speed = speed;\n        this.startPos = this.node.position;\n        this.moving = true;\n\n        this.schedule(this.phyUpdate, 0.01);\n    },\n\n    rock(){\n        this.node.runAction(cc.sequence(\n            cc.rotateBy(.2,10).easing(cc.easeSineOut()),\n            cc.rotateBy(.2,-17.5).easing(cc.easeSineInOut()),\n            cc.rotateBy(.2,12.5).easing(cc.easeSineInOut()),\n            cc.rotateBy(.2,-7.5).easing(cc.easeSineInOut()),\n            cc.rotateBy(.2,2.5).easing(cc.easeSineIn()),\n            cc.callFunc(function(){\n                if(gameInstance.gameView.arrowNum == 0) gameInstance.gameView.gameOver();\n\n                if(gameInstance.gameView.curHitNum == gameInstance.gameView.getCurMustShoot()){\n                    gameInstance.gameView.move();\n                }\n\n                gameInstance.gameView.player.shootEnable = true;\n\n            }.bind(this))\n        ))\n    },\n\n    ground(){\n        this.node.runAction(cc.spawn(\n            cc.rotateTo(.75,0).easing(cc.easeBounceOut()),\n            cc.moveBy(.75,cc.v2(400 * Math.cos(Utils.getRad(this.node.rotation)),0))\n        ))\n    },\n\n    clearSelf(){\n        this.node.parent = null;\n        for(let i = 0; i < this.hitXs.length; ++i){\n            this.hitXs[i].parent = null;\n        }\n        this.hitXs = [];\n    }\n});\n"]}